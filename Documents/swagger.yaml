openapi: 3.0.1
info:
  title: Describe.me
  description: Опиши функцию - спаси дерево!
  contact:
    email: pavlov.nick.2000@gmail.com
  license:
    name: Beerware License (Я люблю бланши, Шляпос любит тёмное)
    url: https://spdx.org/licenses/Beerware.html
  version: 1.0.0
servers:
- url: http://describe-me.ru/api

tags:
- name: User
  description: Данные о пользовательском профиле

- name: Language
  description: Языки программирования, на которых написаны функции в постах

- name: Preference
  description: Языки, которые предпочитает пользователь

- name: Post
  description: Посты, содержащие код функции для описания

- name: Package
  description: Наборы постов, собранные по общему признаку
  
- name: Description
  description: Описания, даваемые постам пользователями
  
- name: Rating
  description: Оценки, которые пользователи дали описаниям
  

paths:
  /user/register:
    post:
      tags:
      - User
      summary: Создать аккаунт
      operationId: registerUser
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      
      - name: login
        in: query
        required: true
        schema:
          type: string
      
      - name: password
        in: query
        required: true
        schema:
          type: string
          
      responses:
        '200': 
          $ref: '#/components/responses/200Ok'
        '409':
          $ref: '#/components/responses/409Conflict'
            
  /user/login:
    get:
      tags:
      - User
      summary: Войти в аккаунт
      operationId: loginUser
      parameters:
      - name: login
        in: query
        required: true
        schema:
          type: string
      
      - name: password
        in: query
        required: true
        schema:
          type: string
          
      responses:
        '200': 
          $ref: '#/components/responses/200Ok'
          headers:
            X-Rate-Limit:
              description: Количество допустимых запросов в час
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: Срок действия токена в формате UTC
              schema:
                type: string
                format: date-time
        '403':
          $ref: '#/components/responses/403Forbidden'
          content: {}
          
  /user/logout:
    get:
      tags:
      - User
      summary: Выйти из аккаунта
      operationId: logoutUser
      responses:
        default:
          $ref: '#/components/responses/200Ok'
          content: {}
          
  /user/{login}:
    get:
      tags:
      - User
      summary: Получения профиля пользователя
      operationId: getUser
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
          
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/400BadRequest'
          content: {}
        '404':
          $ref: '#/components/responses/404NotFound'
          content: {}
      
    put:
      tags:
      - User
      summary: Обновить данные пользователя
      operationId: updateUser
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Новая версия пользователя
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '400':
          $ref: '#/components/responses/400BadRequest'
          content: {}
        '404':
          $ref: '#/components/responses/400BadRequest'
          content: {}
        x-codegen-request-body-name: body

  /lang/list:
    get:
      tags:
      - Language
      summary: Получить список всех языков
      operationId: listLanguages
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                  
        '204':
          $ref:
            '#/components/responses/204NoContent'
          content: {}
        
        '400':
          $ref:
            '#/components/responses/400BadRequest'
          content: {}
          
      security:
      - describeMeAuth:
        - student
        - teacher
        
  /pref:
    post:
      tags: 
      - Preference
      summary: Добавить языковое предпочтение
      operationId: createPreference
      parameters:
      - name: login
        in: query
        required: true
        schema:
          type: string
      - name: lang_name
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
          
      security:
        - describeMeAuth:
          - student
          - teacher
        
    delete:
      tags: 
      - Preference
      summary: Удалить языковое предпочтение
      operationId: deletePreference
      parameters:
      - name: login
        in: query
        required: true
        schema:
          type: string
      - name: lang_name
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
          
      security:
        - describeMeAuth:
          - student
          - teacher
  
  /pref/list/{login}:
    get:
      tags:
      - Preference
      summary: Получить все языковые предпочтения пользователя
      operationId: listPreferences
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Preference'
                  
        '204':
          $ref:
            '#/components/responses/204NoContent'
          content: {}
        
        '400':
          $ref:
            '#/components/responses/400BadRequest'
          content: {}
          
      security:
      - describeMeAuth:
        - student
        - teacher
  
  
  /post:
    post:
      tags:
      - Post
      summary: Создать карточку
      operationId: createPost
      parameters:
      - name: pack_name
        in: query
        required: true
        schema:
          type: string
      - name: code
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
          
      security:
        - describeMeAuth:
          - teacher
          
  /post/{postID}:
    get:
      tags:
      - Post
      summary: Получить карточку
      operationId: getPost
      parameters:
      - name: postID
        in: path
        required: true
        schema:
          type: string
          
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          $ref: '#/components/responses/400BadRequest'
          content: {}
        '404':
          $ref: '#/components/responses/404NotFound'
          content: {}
          
            
      security:
        - describeMeAuth:
          - student
          - teacher
      
  /post/desc/{postID}:
    get:
      tags:
      - Post
      summary: Получить описания к карточке
      operationId: getPostDescriptions
      parameters:
      - name: postID
        in: path
        required: true
        schema:
          type: string
          
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            application/json:
              type: array
              schema:
                $ref: '#/components/schemas/Description'
        '400':
          $ref: '#/components/responses/400BadRequest'
          content: {}
        '404':
          $ref: '#/components/responses/404NotFound'
          content: {}
          
      security:
        - describeMeAuth:
          - student
          - teacher
      
    patch:
      tags:
      - Post
      summary: Обновить карточку
      operationId: updatePost
      parameters:
      - name: postID
        in: path
        required: true
        schema:
          type: string
      - name: code
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'

      security:
        - describeMeAuth:
          - teacher
  
  /post/desc/rand/{postID}:
    get:
      tags:
      - Post
      summary: Получить случайное описание к карточке
      operationId: getRandomPostDescription
      parameters:
      - name: postID
        in: path
        required: true
        schema:
          type: string
          
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Description'
        '400':
          $ref: '#/components/responses/400BadRequest'
          content: {}
        '404':
          $ref: '#/components/responses/404NotFound'
          content: {}
          
      security:
        - describeMeAuth:
          - student
          - teacher
  
  /pack:
    post:
      tags:
      - Package
      summary: Создать набор карточек
      operationId: createPackage
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: language
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '409':
          $ref: '#/components/responses/409Conflict'
          
      security:
        - describeMeAuth:
          - teacher
          
  /pack/append/{postID}:
    patch:
      tags:
      - Package
      summary: Добавить к набору карточек новую карточку
      operationId: appendToPackage
      parameters:
      - name: postID
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409Conflict'
          
      security:
        - describeMeAuth:
          - teacher
    
  /pack/remove/{postID}:
    patch:
      tags:
      - Package
      summary: Убрать карточку из набора карточек
      operationId: removeFromPackage
      parameters:
      - name: postID
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
          
      security:
        - describeMeAuth:
          - teacher
    
  /pack/list/{login}:
    get:
      tags:
      - Package
      summary: Получить список наборов карточек, видимых пользователю
      operationId: listPackages
      parameters:
      - name: login
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            application/json:
              type: array
              schema:
                $ref: '#/components/schemas/Package'
        '400':
          $ref: '#/components/responses/400BadRequest'
          content: {}
        '404':
          $ref: '#/components/responses/404NotFound'
          content: {}
          
      security:
        - describeMeAuth:
          - student
          - teacher
    
  /pack/list/{name}:
    get:
      tags:
      - Package
      summary: Получить все карточки из набора
      operationId: getPostsFromPackage
      parameters:
      - name: name
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            application/json:
              type: array
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
          
      security:
        - describeMeAuth:
          - student
          - teacher
  
  /desc:
    post:
      tags:
      - Description
      summary: Создать описание к карточке
      operationId: createDescription
      parameters:
      - name: post_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: content
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '409':
          $ref: '#/components/responses/409Conflict'
          
      security:
        - describeMeAuth:
          - student
          - teacher
          
    
  /desc/{descriptionID}:
    get:
      tags:
      - Description
      summary: Получить описание по ID
      operationId: getDescription
      parameters:
      - name: descriptionID
        in: path
        schema:
          type: integer
          format: int64
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
          
      security:
        - describeMeAuth:
          - student
          - teacher
  
  /rate/like/{descriptionID}:
    post:
      tags:
      - Rating
      summary: Поставить описанию лайк
      operationId: likeDescription
      parameters:
      - name: descriptionID
        in: path
        schema:
          type: integer
          format: int64
        required: true
      - name: login
        in: query
        schema:
          type: string
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
          
      security:
        - describeMeAuth:
          - student
          - teacher
          
  /rate/dislike/{descriptionID}:
    post:
      tags:
      - Rating
      summary: Поставить описанию дизлайк
      operationId: dislikeDescription
      parameters:
      - name: descriptionID
        in: path
        schema:
          type: integer
          format: int64
        required: true
      - name: login
        in: query
        schema:
          type: string
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
          
      security:
        - describeMeAuth:
          - student
          - teacher
          
  /rate/purge/{descriptionID}:
    post:
      tags:
      - Rating
      summary: Убрать реакцию с описания
      operationId: purgeDescription
      parameters:
      - name: descriptionID
        in: path
        schema:
          type: integer
          format: int64
        required: true
      - name: login
        in: query
        schema:
          type: string
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
          
      security:
        - describeMeAuth:
          - student
          - teacher
          
  /rate/rating/{descriptionID}:
    get:
      tags:
      - Rating
      summary: Получить рейтинг описания
      operationId: getDescriptionRating
      parameters:
      - name: descriptionID
        in: path
        schema:
          type: integer
          format: int64
        required: true
      - name: login
        in: query
        schema:
          type: string
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200Ok'
          content:
            result:
              type: integer
        '400':
          $ref: '#/components/responses/400BadRequest'
          content: {}
        '404':
          $ref: '#/components/responses/404NotFound'
          content: {}
      security:
        - describeMeAuth:
          - student
          - teacher
  
components:
  schemas:
    User:
      required:
      - id
      - login
      - email
      - hash
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
        email:
          type: string
        hash:
          type: string
        role:
          type: string
          enum:
            - student
            - teacher
            
    Language:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          
    Preference:
      required:
        - user_id
        - lang_id
      type: object
      properties:
        user_id:
          type: integer
          format: int64
        lang_id:
          type: integer
          format: int64
          
    Post:
      required:
        - id
        - code
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
          
    Package:
      required:
        - id
        - name
        - author
        - lang_id
        - date
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        author:
          type: integer
          format: int64
        lang_id:
          type: integer
          format: int64
        date:
          type: string
          format: date
    
    Description:
      required:
        - id
        - post_id
        - author
        - content
      
      type: object
      properties:
        id:
          type: integer
          format: int64
        post_id:
          type: integer
          format: int64
        author:
          type: integer
          format: int64
        content:
          type: string
    
  responses:
    200Ok:
      description: OK
      
    204NoContent:
      description: No content
    
    400BadRequest:
      description: Bad request
  
    403Forbidden:
      description: Invalid credentials
  
    404NotFound:
      description: Object not found
      
    409Conflict:
      description: Conflict occured
    
  
  securitySchemes:
    describeMeAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            student: Доступ для студентов
            teacher: Доступ для преподавателей